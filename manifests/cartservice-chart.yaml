---
apiVersion: kots.io/v1beta1
kind: HelmChart
metadata:
  name: cartservice
spec:
  # chart identifies a matching chart from a .tgz
  chart:
    name: onlineboutique
    chartVersion: 0.6.0
    releaseName: cartservice
  # useHelmInstall identifies whether this Helm chart will use the
  # Replicated Helm installation (false) or native Helm installation (true). Default is false.
  # Native Helm installations are only available for Helm v3 charts.
  useHelmInstall: true
  # weight determines the order that charts with "useHelmInstall: true" are applied, with lower weights first.
  weight: 10
  # values are used in the customer environment, as a pre-render step
  # these values will be supplied to helm template
  values:
    # there only one chart for the online boutique application, but the goal here is to simulate a set of 
    # services contributed by individual teams that may release at different cadenaces
    #
    # to accomplish this, we us multiple instances of the chart with a single service created using the
    # values to toggle which service is deployed

    # image tag can vary per team
    images:
      repository: registry.shortrib.dev/online-boutique
      tag: edge@sha256:6a0a3b9612d368744cbb2db1346d19f66bd5750915b61bcd171cedae33b31e15
    # enable the specific services this instance represents
    cartService:
      create: true
    # disable other services
    adService:
      create: false
    checkoutService:
      create: false
    currencyService:
      create: false
    emailService:
      create: false
    frontend:
      create: false
    loadGenerator:
      create: false
    paymentService:
      create: false
    productCatalogService:
      create: false
    recommendationService:
      create: false
    shippingService:
      create: false
  optionalValues:
    - when: '{{repl ConfigOptionEquals "redis_type" "embedded_redis"}}'
      recursiveMerge: false
      cartDatabase:
        # Specifies the type of the cartservice's database, could be either redis or spanner.
        type: redis
        connectionString: "redis-cart:6379"
        inClusterRedis:
          create: true
    - when: '{{repl ConfigOptionEquals "redis_type" "external_redis"}}'
      recursiveMerge: false
      cartDatabase:
        # Specifies the type of the cartservice's database, could be either redis or spanner.
        type: redis
        connectionString: '{{repl ConfigOption "external_redis_host"}}:{{repl ConfigOption "external_redis_port"}}'
        inClusterRedis:
          create: false
