resources:
- name: source
  type: git
  icon: github
  source:
    uri: https://github.com/crdant/microservices-demo.git
    paths: 
    - src/adservice/**
- name: image
  type: registry-image
  icon: oci 
  source:
    repository: registry.shortrib.dev/online-boutique/adservice
    username: ((registry.robot))
    password: ((registry.token))
- name: version
  type: semver
  icon: counter
  source:
    driver: gcs
    bucket: online-boutique-semver
    key: adservice-version
    json_key: ((gcs.serviceaccountjson))

jobs:
- name: test
  plan:
  - get: source
    trigger: true
  - task: check
    config:
      platform: linux
      inputs:
      - name: source
      image_resource:
        source:
          repository: gradle
          tag: 8.0.2-jdk19-jammy
        type: registry-image
      caches:
      - path: $HOME/.m2/repository
      - path: $HOME/.gradle/caches/
      - path: $HOME/.gradle/wrapper/
      run:
        path: /bin/sh
        dir: source/src/adservice
        args:
        - -c
        - |
          java -Xmx32m -version
          javac -J-Xmx32m -version

          gradle wrapper
          ./gradlew test

- name: build
  plan:
  - get: source
    trigger: true
    passed:
    - test
  - get: version
    params:
      bump: patch
  - load_var: version
    file: version/version
  - task: build
    privileged: true
    output_mapping:
      image: build
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      params:
        CONTEXT: source/src/adservice        
      inputs:
      - name: source
      outputs:
      - name: image
      run:
        path: build
  - put: image
    params: 
      image: build/image.tar
      version: ((.:version))
      bump_aliases: true 
  - put: version
    params:
      file: version/version

- name: sign
  plan:
  - get: image
    trigger: true
    passed:
    - build
  - task: sign
    params:
      KUBECONFIG_JSON: ((kubeconfig))
      DOCKERCONFIG_JSON: ((registry.config))
    config:
      platform: linux
      image_resource:
        source:
          repository: gcr.io/projectsigstore/cosign
          tag: v2.0.0
        type: registry-image
      inputs:
      - name: image
      run:
        path: /busybox/sh
        args:
          - -c
          - |
            umask 077
            mkdir ${HOME}/.kube
            echo "$KUBECONFIG_JSON" > ${HOME}/.kube/config

            mkdir ${HOME}/.docker
            echo "$DOCKERCONFIG_JSON" > ${HOME}/.docker/config.json

            export DIGEST=$(cat image/digest)
            /ko-app/cosign version 
            /ko-app/cosign sign --yes --key k8s://concourse-online-boutique/signing-key registry.shortrib.dev/online-boutique/adservice@$DIGEST 
